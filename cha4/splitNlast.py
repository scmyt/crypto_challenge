from gmpy2 import *
import time
from math import gcd

N = [
 90252653600964453524559669296618135272911289775949194922543520872164147768650421038176330053599968601135821750672685664360786595430028684419411893316074286312793730822963564220564616708573764764386830123818197183233443472506106828919670406785228124876225200632055727680225997407097843708009916059133498338129,
 146839643970016464813197409569004275595828791825722617066607993001682901023784267554815946189374651530288894322286859792246413142980277245909181062525398546369553995023529451396820549308690493928593324007689135648753323161394735120908960458860801743476353228970081369439513197105039143930008573928693059198131,
 94390533992358895550704225180484604016029781604622607833044135524814562613596803297695605669157378162035217814540004231075201420796787547733762265959320018107419058832819010681344133011777479722382525797938558181629835768471461434560813554411133962651212455645589624432040989600687436833459731886703583047283,
 111178307033150739104608647474199786251516913698936331430121060587893564405482896814045419370401816305592149685291034839621072343496556225594365571727260237484885924615887468053644519779081871778996851601207571981072261232384577126377714005550318990486619636734701266032569413421915520143377137845245405768733,
 94154993593274109828418786834159728190797445711539243887409583756844882924221269576486611543668906670821879426307992404721925623741478677756083992902711765865503466687919799394258306574702184666207180530598057989884729154273423032471322027993848437082723045300784582836897839491321003685598931080456249945287]

def FindFactor(fname, n, bitlen):
    start_time = time.perf_counter()
    for f16bit in range(1, 65537):
        #print(f'\r{f16bit}', end='')
        Xn = format(f16bit, '016b')
        while len(Xn) <= bitlen + 16:
            Xn += format((365 * int(Xn[-16:], 2) - 1) % 2**16, '016b')

        while len(Xn) >=bitlen and int(Xn, 2):
            if gcd(int(Xn, 2), n) != 1:
                print(f'\n[+]Frame {fname} Factor found!')
                print(f'  [-]p: {int(Xn, 2)}')
                print(f'  [-]q: {n // int(Xn, 2)}')
                print(f'[!]Timer: {round(time.perf_counter() - start_time)} s')
                return ''
            
            Xn = Xn[:-1]

    #return f'[!!!]Frame {fname} Factor not found!\n'
    return f'\n'

start_time = time.perf_counter()

for fname, n in enumerate(N):
    print(FindFactor(fname, n, 512))

for fname, n in enumerate(N):
    print(FindFactor(fname, n, 976))

print(f'[!]All Timer: {round(time.perf_counter() - start_time)} s')